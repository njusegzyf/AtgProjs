{
  Inputs: [
    { Input: [ 0,-1000000,-1000000,0,0,0,0,0,0,0,1,0 ] }, # test0
    { Input: [ 0,-1000000,-1000000,0,0,0,0,0,0,0,-1000000,0 ] },
    { Input: [ 0,-1000000,1,0,0,0,0,0,0,0,-1000000,0 ] },
    { Input: [ 0,-1000000,1,0,0,0,0,0,0,-1000000,1,0 ] },
    { Input: [ 0,-1000000,1,0,0,0,0,0,0,-1000000,-1000000,0 ] }, // test5
    { Input: [ 0,1,-1000000,0,601,0,0,0,0,0,1,0 ] },
    { Input: [ 0,1,-1000000,0,601,0,0,0,0,0,-1000000,0 ] },
    { Input: [ 0,1,1,0,601,0,0,0,0,0,1,0 ] },
    { Input: [ 0,1,1,0,601,0,0,0,0,0,-1000000,0 ] },
    { Input: [ 0,1,1,0,601,0,0,0,0,-1000000,1,0 ] },
    { Input: [ 0,1,1,0,601,0,0,0,0,-1000000,-1000000,0 ] }, // test11
    { Input: [ -1000000,1,-1000000,0,-1000000,0,0,0,0,0,1,0 ] },
    { Input: [ -1000000,1,-1000000,0,-1000000,0,0,0,0,0,-1000000,0 ] },
    { Input: [ -1000000,1,1,0,-1000000,0,0,0,0,0,1,0 ] },
    { Input: [ -1000000,1,1,0,-1000000,0,0,0,0,0,-1000000,0 ] },
    { Input: [ -1000000,1,1,0,-1000000,0,0,0,0,-1000000,1,0 ] }, // test16
    { Input: [ -1000000,1,1,0,-1000000,0,0,0,0,-1000000,-1000000,0 ] },
    { Input: [ 601,1,-1000000,0,-1000000,0,0,0,0,0,1,0 ] },
    { Input: [ 601,1,-1000000,-1000000,-1000000,-1000000,0,-1000000,-1000000,0,-1000000,1 ] },
    { Input: [ 601,1,-1000000,-1000000,-1000000,-1000000,0,-1000000,-1000000,0,-1000000,-1000000 ] },
    { Input: [ 601,1,-1000000,-1000000,-1000000,-1000000,0,-1000000,-999700,0,-1000000,1 ] }, // test21
    { Input: [ 601,1,-1000000,-1000000,-1000000,-1000000,0,-999999,-1000000,0,-1000000,-1000000 ] },
    { Input: [ 601,1,-1000000,-1000000,-1000000,-999999,0,-1000000,-1000000,0,-1000000,1 ] },
    { Input: [ 601,1,-1000000,-1000000,-1000000,-999999,0,101,400,0,-1000000,1 ] },
    { Input: [ 601,1,-1000000,-1000000,-1000000,-999999,0,401,400,0,-1000000,-1000000 ] },

    { Input: [  ] }, // test26
    { Input: [  ] },
    { Input: [  ] },
    { Input: [  ] },
    { Input: [  ] },

  ]
}

  @Test
  public void test26() {
    Tcas.start_symbolic(601,1,-1000000,-1000000,-1000000,-999999,0,-999999,-1000000,0,-1000000,-1000000);
  }

  @Test
  public void test27() {
    Tcas.start_symbolic(601,1,-1000000,-999999,-1000000,-1000000,0,-1000000,-1000000,0,-1000000,-1000000);
  }

  @Test
  public void test28() {
    Tcas.start_symbolic(601,1,-1000000,-999999,-1000000,-1000000,0,-1000000,-999700,0,-1000000,1);
  }

  @Test
  public void test29() {
    Tcas.start_symbolic(601,1,-1000000,-999999,-1000000,-1000000,0,400,400,0,-1000000,-1000000);
  }

  @Test
  public void test30() {
    Tcas.start_symbolic(601,1,-1000000,-999999,-1000000,-1000000,0,400,700,0,-1000000,1);
  }

  @Test
  public void test31() {
    Tcas.start_symbolic(601,1,1,0,-1000000,0,0,0,0,-1000000,1,0);
  }

  @Test
  public void test32() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-1000000,-1000000,0,-1000000,1);
  }

  @Test
  public void test33() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-1000000,-1000000,0,-1000000,-1000000);
  }

  @Test
  public void test34() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-1000000,-1000000,0,1,1);
  }

  @Test
  public void test35() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-1000000,-1000000,0,1,-1000000);
  }

  @Test
  public void test36() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-1000000,-1000000,-1000000,-1000000,1);
  }

  @Test
  public void test37() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-1000000,-1000000,-1000000,-1000000,-1000000);
  }

  @Test
  public void test38() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-1000000,-999700,0,-1000000,1);
  }

  @Test
  public void test39() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-1000000,-999700,0,1,1);
  }

  @Test
  public void test40() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-1000000,-999700,-1000000,-1000000,1);
  }

  @Test
  public void test41() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-999999,-1000000,0,-1000000,-1000000);
  }

  @Test
  public void test42() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-999999,-1000000,0,1,-1000000);
  }

  @Test
  public void test43() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-1000000,0,-999999,-1000000,-1000000,-1000000,-1000000);
  }

  @Test
  public void test44() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,-1000000,-1000000,0,-1000000,1);
  }

  @Test
  public void test45() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,-1000000,-1000000,0,1,1);
  }

  @Test
  public void test46() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,-1000000,-1000000,-1000000,-1000000,1);
  }

  @Test
  public void test47() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,101,400,0,-1000000,1);
  }

  @Test
  public void test48() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,101,400,0,1,1);
  }

  @Test
  public void test49() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,101,400,-1000000,-1000000,1);
  }

  @Test
  public void test50() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,401,400,0,-1000000,-1000000);
  }

  @Test
  public void test51() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,401,400,0,1,-1000000);
  }

  @Test
  public void test52() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,401,400,-1000000,-1000000,-1000000);
  }

  @Test
  public void test53() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,-999999,-1000000,0,-1000000,-1000000);
  }

  @Test
  public void test54() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,-999999,-1000000,0,1,-1000000);
  }

  @Test
  public void test55() {
    Tcas.start_symbolic(601,1,1,-1000000,-1000000,-999999,0,-999999,-1000000,-1000000,-1000000,-1000000);
  }

  @Test
  public void test56() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,-1000000,-1000000,0,-1000000,-1000000);
  }

  @Test
  public void test57() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,-1000000,-1000000,0,1,-1000000);
  }

  @Test
  public void test58() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,-1000000,-1000000,-1000000,-1000000,-1000000);
  }

  @Test
  public void test59() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,-1000000,-999700,0,-1000000,1);
  }

  @Test
  public void test60() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,-1000000,-999700,0,1,1);
  }

  @Test
  public void test61() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,-1000000,-999700,-1000000,-1000000,1);
  }

  @Test
  public void test62() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,400,400,0,-1000000,-1000000);
  }

  @Test
  public void test63() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,400,400,0,1,-1000000);
  }

  @Test
  public void test64() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,400,400,-1000000,-1000000,-1000000);
  }

  @Test
  public void test65() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,400,700,0,-1000000,1);
  }

  @Test
  public void test66() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,400,700,0,1,1);
  }

  @Test
  public void test67() {
    Tcas.start_symbolic(601,1,1,-999999,-1000000,-1000000,0,400,700,-1000000,-1000000,1);
  }
}


