Libraries: [
  # Not used in current version. 
  # Since the libraries must be loaded before or with the class that contains native methods (typically in the static init block of the class), all libraries are loaded in the static init block of class `cn.nju.seg.atg.callCPP` using `CallCPPLibLoader`.
  callCPP
]

ATG: {
  ResultFolder: "/root/lffResult/test"
  CopyConfigToResultFolder: true

  Action: atg-pc # atg-tsc, atg-pc or atg-bc
  # CountOfRepeation: 7 # not supported yet
  MaxNumOfPredictParam: 400
  MaxNumOfGenerateCycle: 4
  PredictBoundary: 5.0 # between [0.1, 20.0]
  MaxStep: 5.0
  StartPoint: 0.0
}

# The executor that will be used to run ATG tests.
# Since ATG is not thread safe (as it use lots of static shared variables), we can not use executors that allow parallel executions
Executor: {
  Type: FIXED_THREAD_POOL
  # the arg that will be passed when creating the executor
  Arg: 1

  # Timeout for run single function test once. The time unit must be lower case and can be one of time units supported in HOCON,
  # including: ns(nano[s], nanosecond[s]), us(micro[s], microsecond[s]), ms(milli[s], millisecond[s]), s(second[s]), m(minute[s]), h(hour[s]), d(day[s]).
  SingleFunctionTimeout: 3600s
}

BatchItems: [
  {
    # If `Project` is not defined, use the project this config file belongs to. 
    # Project : ATGWrapperCpp

    # Specify the source file (the TranslationUnit) to test.
    BatchFile : "src/coral/JPFBenchmark1.cpp" 

    # Specify functions to test. If not defined, test all functions in the TranslationUnit.
    # BatchFunctions : [benchmark01]
  }
  #{ BatchFile : "src/coral/JPFBenchmark2.cpp" } 
  #{ 
  #  Project : ATGWrapperCpp
  #  BatchFile : "src/coral/JPFBenchmark1"
  #  BatchFunctions : [benchmark01, benchmark02]
  #} 
]
